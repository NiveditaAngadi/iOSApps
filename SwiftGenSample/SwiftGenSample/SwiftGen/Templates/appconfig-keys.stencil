// swiftlint:disable all
// Generated using SwiftGen â€” https://github.com/SwiftGen/SwiftGen

{% if files %}
{% set accessModifier %}{% if param.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% set documentPrefix %}{{param.documentName|default:"Document"}}{% endset %}
import Foundation

// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length

// MARK: - JSON Files
{% macro docBlock file %}
  {% call enumContent file.documents.first.metadata.properties "" %}
{% endmacro %}
{% macro enumContent properties keys %}
  {% for key,metadata in properties %}
    {% set propertyName %}{{key|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}}{% endset %}
    {% if metadata.type == "Dictionary" %}
enum {{propertyName}} {
    {% if keys == "" %}
        {% set newKeys %}"{{propertyName}}"{% endset %}
        {% filter indent:2 %}{% call enumContent metadata.properties newKeys %}{% endfilter %}
    {% else %}
        {% set newKeys %}{{keys}}, "{{propertyName}}"{% endset %}
        {% filter indent:2 %}{% call enumContent metadata.properties newKeys %}{% endfilter %}
    {% endif %}
}
    {% else %}
        {% if metadata.type == "Array" %}
            {% if keys == "" %}
static let {{propertyName}} = AppConfig{{metadata.type}}<{{metadata.element.type}}>(keys: ["{{key}}"])
            {% else %}
static let {{propertyName}} = AppConfig{{metadata.type}}<{{metadata.element.type}}>(keys: [{keys}}, "{{key}}"])
            {% endif %}
        {% else %}
            {% if keys == "" %}
static let {{propertyName}} = AppConfig{{metadata.type}}(keys: ["{{key}}"])
            {% else %}
static let {{propertyName}} = AppConfig{{metadata.type}}(keys: [{{keys}}, "{{key}}"])
            {% endif %}
        {% endif %}
    {% endif %}
  {% endfor %}
{% endmacro %}
{% macro documentBlock file document %}
  {% set rootType %}{% call typeBlock document.metadata %}{% endset %}
  {% if document.metadata.type == "Array" %}
  {{accessModifier}} static let items: {{rootType}} = objectFromJSON(at: "{% call transformPath file.path %}")
  {% elif document.metadata.type == "Dictionary" %}
  private static let _document = JSONDocument(path: "{% call transformPath file.path %}")

    {% for key,value in document.metadata.properties %}
  {{accessModifier}} {% call propertyBlock key value %}
    {% endfor %}
  {% else %}
  {{accessModifier}} static let value: {{rootType}} = objectFromJSON(at: "{% call transformPath file.path %}")
  {% endif %}
{% endmacro %}
{% macro typeBlock metadata %}{% filter removeNewlines:"leading" %}
  {% if metadata.type == "Array" %}
    [{% call typeBlock metadata.element %}]
  {% elif metadata.type == "Dictionary" %}
    {{documentPrefix}}{{key|swiftIdentifier:"pretty"|upperFirstLetter|escapeReservedKeywords}}
  {% elif metadata.type == "Optional" %}
    Any?
  {% else %}
    {{metadata.type}}
  {% endif %}
{% endfilter %}{% endmacro %}
{% macro propertyBlock key metadata %}{% filter removeNewlines:"leading" %}
  {% set propertyName %}{{key|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}}{% endset %}
  {% set propertyType %}{% call typeBlock metadata %}{% endset %}
  let {{propertyName}}: {{propertyType}}
{% endfilter %}{% endmacro %}
{% macro transformPath path %}{% filter removeNewlines %}
  {% if param.preservePath %}
    {{path}}
  {% else %}
    {{path|basename}}
  {% endif %}
{% endfilter %}{% endmacro %}

// swiftlint:disable identifier_name line_length type_body_length
{{accessModifier}} enum {{param.enumName|default:"JSONFiles"}} {
  {% if files.count > 1 %}
    {% for file in files %}
  {{accessModifier}} enum {{file.name|swiftIdentifier:"pretty"|escapeReservedKeywords}} {
  {% filter indent:2 %}{% call docBlock file %}{% endfilter %}
    }
    {% endfor %}
  {% else %}
    {% filter indent:2 %}{% call docBlock files.first %}{% endfilter %}
  {% endif %}
}
// swiftlint:enable identifier_name line_length type_body_length

// MARK: - Implementation Details

class AppConfigValue {
    let keys: [String]

    init(keys: [String]) {
        self.keys = keys
    }
}

class AppConfigString: AppConfigValue {
}

class AppConfigBool: AppConfigValue {
}

class AppConfigInt: AppConfigValue {
}

class AppConfigArray<T>: AppConfigValue {
}

private final class BundleToken {}
{% else %}
// No files found
{% endif %}
